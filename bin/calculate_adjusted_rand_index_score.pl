#! /usr/bin/perl -w
################################################################################
# calculate_adjusted_rand_index_score.pl version 1.0
# Copyright (C) Runmao Lin
# Contact (E-mail): linrunmao@caas.cn
# 
# This program is provided under the terms of a personal license to the recipient and 
# may only be used for the recipient's own research at an academic insititution.
# 
# For using this program in a company or for commercial purposes, a commercial license 
# is required.
# 
# The purpose of this program is used to calculate ARI score for scRNA-seq clusters.
# The 'comparison_Seurat-SC3-DIMMSC.txt' is generated by 'comparison_Seurat-SC3-DIMMSC.pl'.
# install R software and R package of 'phyclust'
################################################################################

use strict;
use warnings;
use Getopt::Long;

my $comparison_Seurat_SC3_DIMMSC; # file of 'comparison_Seurat-SC3-DIMMSC.txt'
my $output; # the output file
my $help;
my $version=sprintf("%.1f",1.0);

GetOptions
(
	"comparison_Seurat_SC3_DIMMSC=s" => \$comparison_Seurat_SC3_DIMMSC,    # string
	"output=s" => \$output,                                                # string
	"help" => \$help                                                       # flag
);

################################################################################
# usage
############################# usage begin ######################################
my $usage= << "USAGE";

Example: perl $0 -comparison_Seurat_SC3_DIMMSC  comparison_Seurat-SC3-DIMMSC.txt  -output  comparison_Seurat-SC3-DIMMSC.ARI.txt 
version: 1.0
Options:
	-comparison_Seurat_SC3_DIMMSC <file>  the 'comparison_Seurat-SC3-DIMMSC.txt' file
	-output <prefix>                      the output file, such as 'comparison_Seurat-SC3-DIMMSC.ARI.txt'
	-help                                 print help information

USAGE
############################## usage end #######################################

if ($help || !(defined $comparison_Seurat_SC3_DIMMSC) || !(defined $output))
{
	print $usage;
	exit;
}

my $R="R";

my @approach;
my @cell;
my %infor;
open F,"$comparison_Seurat_SC3_DIMMSC" || die "Cannot open the file '$comparison_Seurat_SC3_DIMMSC'.\n";
while(<F>)
{
	chomp;
	my @sp=split(/\t/,$_);
	if($_=~/Cell/)
	{
		for(my $i=1;$i<@sp;$i++)
		{
			push(@approach,$sp[$i]);
		}
	}
	elsif($_ ne "" && !($_=~/NA/))
	{
		push(@cell,$sp[0]);
		for(my $i=1;$i<@sp;$i++)
		{
			$infor{$sp[0]}{$approach[$i-1]}=$sp[$i];
		}
	}
}
close F;

open OUT,">$output";
print OUT "ReferenceCluster\tQueryCluster\tScore\n";
for(my $i=0;$i<@approach;$i++) # ref
{
	for(my $j=0;$j<@approach;$j++) # que
	{
		if($i!=$j)
		{
			open OA,">run_adjusted_rand_idex.R";
			print OA "library(phyclust)\n";
			print OA "\n";
			my $true="";
			my $pred="";
			my $true_num=0;
			my $pred_num=0;
			my %class;
			for(my $c=0;$c<@cell;$c++)
			{
				my $ref_class=$infor{$cell[$c]}{$approach[$i]};
				my $que_class=$infor{$cell[$c]}{$approach[$j]};
				if(!(defined $class{$ref_class}))
				{
					$true_num++;
					$true.="$true_num\,";
					$class{$ref_class}=1;
				}
				else
				{
					$true.="$class{$ref_class}\,";
				}
				if(!(defined $class{$que_class}))
				{
					$pred_num++;
					$pred.="$pred_num\,";
					$class{$que_class}=1;
				}
				else
				{
					$pred.="$class{$que_class}\,";
				}
			}
			$true=~s/\,$//;
			$pred=~s/\,$//;
			print OA "true <- c($true\)\n";
			print OA "pred <- c($pred\)\n";
			print OA "ARI <- RRand(true, pred)\$adjRand\n";
			print OA "write.table(ARI, \"run_adjusted_rand_idex\.result\", quote=FALSE, sep=\"\\t\")\n";
			close OA;
			system(" $R CMD BATCH run_adjusted_rand_idex.R ");
			open R,"run_adjusted_rand_idex.result" || die "Cannot open the file 'run_adjusted_rand_idex.result'.\n";
			while(<R>)
			{
				chomp;
				my @rsp=split(/\t/,$_);
				if($_ ne "" && (scalar @rsp)==2)
				{
					$rsp[1]=sprintf("%.4f",$rsp[1]);
					print OUT "$approach[$i]\t$approach[$j]\t$rsp[1]\n";
					last;
				}
			}
			close R;
			system(" rm run_adjusted_rand_idex.R run_adjusted_rand_idex.Rout \.RData run_adjusted_rand_idex.result ");
		}
	}
}
close OUT;

__END__
