#! /usr/bin/perl -w
################################################################################
# calculate_normalized_mutual_information_score.pl version 1.0
# Copyright (C) Runmao Lin
# Contact (E-mail): linrunmao@caas.cn
# 
# This program is provided under the terms of a personal license to the recipient and 
# may only be used for the recipient's own research at an academic insititution.
# 
# For using this program in a company or for commercial purposes, a commercial license 
# is required.
# 
# The purpose of this program is used to calculate NMI score for scRNA-seq clusters.
# The 'comparison_Seurat-SC3-DIMMSC.txt' is generated by 'comparison_Seurat-SC3-DIMMSC.pl'.
################################################################################

use strict;
use warnings;
use Math::Complex;
use Getopt::Long;

my $comparison_Seurat_SC3_DIMMSC; # file of 'comparison_Seurat-SC3-DIMMSC.txt'
my $output; # the output file
my $help;
my $version=sprintf("%.1f",1.0);

GetOptions
(
	"comparison_Seurat_SC3_DIMMSC=s" => \$comparison_Seurat_SC3_DIMMSC,    # string
	"output=s" => \$output,                                                # string
	"help" => \$help                                                       # flag
);

################################################################################
# usage
############################# usage begin ######################################
my $usage= << "USAGE";

Example: perl $0 -comparison_Seurat_SC3_DIMMSC  comparison_Seurat-SC3-DIMMSC.txt  -output  comparison_Seurat-SC3-DIMMSC.NMI.txt 
version: 1.0
Options:
	-comparison_Seurat_SC3_DIMMSC <file>  the 'comparison_Seurat-SC3-DIMMSC.txt' file
	-output <prefix>                      the output file, such as 'comparison_Seurat-SC3-DIMMSC.NMI.txt'
	-help                                 print help information

USAGE
############################## usage end #######################################

if ($help || !(defined $comparison_Seurat_SC3_DIMMSC) || !(defined $output))
{
	print $usage;
	exit;
}

# logn(1024,2), i.e., log2(1024)

my @approach;
my @cell;
my %infor;
my %class;

open F,"$comparison_Seurat_SC3_DIMMSC" || die "Cannot open the file '$comparison_Seurat_SC3_DIMMSC'.\n";
while(<F>)
{
	chomp;
	my @sp=split(/\t/,$_);
	if($_=~/Cell/)
	{
		for(my $i=1;$i<@sp;$i++)
		{
			push(@approach,$sp[$i]);
		}
	}
	elsif($_ ne "" && !($_=~/NA/))
	{
		push(@cell,$sp[0]);
		for(my $i=1;$i<@sp;$i++)
		{
			$infor{$sp[0]}{$approach[$i-1]}=$sp[$i];
			$class{$approach[$i-1]}{$sp[$i]}=1;
		}
	}
}
close F;

open OUT,">$output";
print OUT "ReferenceCluster\tQueryCluster\tScore\n";
for(my $i=0;$i<@approach;$i++)
{
	my %ref_class;
	for(my $c=0;$c<@cell;$c++)
	{
		$ref_class{$infor{$cell[$c]}{$approach[$i]}}++;
	}
	my $HYclass=0;
	foreach my $rcid(keys %ref_class)
	{
		my $ratio=$ref_class{$rcid}/(scalar @cell);
		$HYclass+=(0-$ratio)*(logn($ratio,2));
	}
	for(my $j=0;$j<@approach;$j++)
	{
		if($i!=$j)
		{
			my %que_class;
			for(my $m=0;$m<@cell;$m++)
			{
				$que_class{$infor{$cell[$m]}{$approach[$j]}}++;
			}
			my $HCclass=0;
			foreach my $qcid(keys %que_class)
			{
				my $ratio=$que_class{$qcid}/(scalar @cell);
				$HCclass+=(0-$ratio)*(logn($ratio,2));
			}
			my $IYCvalue=0;
			my $HYclass_num=0;
			my $HCclass_num=0;
			foreach my $ccid(keys %{$class{$approach[$i]}})
			{
				$HYclass_num++;
			}
			foreach my $ccid(keys %{$class{$approach[$j]}})
			{
				$HCclass_num++;
			}
			foreach my $ccid(keys %{$class{$approach[$j]}})
			{
				my %ref_ccid_num;
				my $que_ccid_num;
				for(my $n=0;$n<@cell;$n++)
				{
					if($infor{$cell[$n]}{$approach[$j]} eq $ccid)
					{
						$que_ccid_num++;
						$ref_ccid_num{$infor{$cell[$n]}{$approach[$i]}}++;
					}
				}
				my $ccid_cal=0;
				foreach my $rccid(keys %ref_ccid_num)
				{
					my $rccid_ratio=$ref_ccid_num{$rccid}/$que_ccid_num;
					$ccid_cal+=$rccid_ratio*logn($rccid_ratio,2);
				}
				$IYCvalue+=(0-1/$HCclass_num)*$ccid_cal;
			}
			$IYCvalue=$HYclass-$IYCvalue;
			my $NMIvalue=sprintf("%.4f",2*$IYCvalue/($HYclass+$HCclass));
			print OUT "$approach[$i]\t$approach[$j]\t$NMIvalue\n";
		}
	}
}
close OUT;

__END__
