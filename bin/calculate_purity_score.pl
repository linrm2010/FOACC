#! /usr/bin/perl -w
################################################################################
# calculate_purity_score.pl version 1.0
# Copyright (C) Runmao Lin
# Contact (E-mail): linrunmao@caas.cn
# 
# This program is provided under the terms of a personal license to the recipient and 
# may only be used for the recipient's own research at an academic insititution.
# 
# For using this program in a company or for commercial purposes, a commercial license 
# is required.
# 
# The purpose of this program is used to calculate purity score for scRNA-seq clusters.
# The 'comparison_Seurat-SC3-DIMMSC.txt' is generated by 'comparison_Seurat-SC3-DIMMSC.pl'.
################################################################################

use strict;
use warnings;
use Getopt::Long;

my $comparison_Seurat_SC3_DIMMSC; # file of 'comparison_Seurat-SC3-DIMMSC.txt'
my $output; # the output file
my $help;
my $version=sprintf("%.1f",1.0);

GetOptions
(
	"comparison_Seurat_SC3_DIMMSC=s" => \$comparison_Seurat_SC3_DIMMSC,    # string
	"output=s" => \$output,                                                # string
	"help" => \$help                                                       # flag
);

################################################################################
# usage
############################# usage begin ######################################
my $usage= << "USAGE";

Example: perl $0 -comparison_Seurat_SC3_DIMMSC  comparison_Seurat-SC3-DIMMSC.txt  -output  comparison_Seurat-SC3-DIMMSC.purity.txt 
version: 1.0
Options:
	-comparison_Seurat_SC3_DIMMSC <file>  the 'comparison_Seurat-SC3-DIMMSC.txt' file
	-output <prefix>                      the output file, such as 'comparison_Seurat-SC3-DIMMSC.purity.txt'
	-help                                 print help information

USAGE
############################## usage end #######################################

if ($help || !(defined $comparison_Seurat_SC3_DIMMSC) || !(defined $output))
{
	print $usage;
	exit;
}

## 'comparison_Seurat-SC3-DIMMSC.txt' file
#Cell	Seurat	SC3	DIMMSC
#AAACCCAAGGTGATAT-1	AtT03	3	1
#AAACCCAAGGTGATTT-1	AtT03	NA	1

my @approach;
my %cluster;
my %class;
my $cellnum=0;
open F,"$comparison_Seurat_SC3_DIMMSC" || die "Cannot open the file '$comparison_Seurat_SC3_DIMMSC'.\n";
while(<F>)
{
	chomp;
	my @sp=split(/\t/,$_);
	if($_=~/Cell/)
	{
		for(my $i=1;$i<@sp;$i++)
		{
			push(@approach,$sp[$i]);
		}
	}
	elsif($_ ne "" && !($_=~/NA/))
	{
		$cellnum++;
		for(my $i=1;$i<@sp;$i++)
		{
			$cluster{$sp[0]}{$approach[$i-1]}=$sp[$i];
			$class{$approach[$i-1]}{$sp[$i]}=1;
		}
	}
}
close F;

open OUT,">$output";
print OUT "ReferenceCluster\tQueryCluster\tScore\n";
for(my $i=0;$i<@approach;$i++) # ref
{
	for(my $j=0;$j<@approach;$j++) # que
	{
		if($i!=$j)
		{
			my $maxsum=0;
			foreach my $que(keys %{$class{$approach[$j]}})
			{
				my %classnum; # ref class
				foreach my $cid(keys %cluster) # cid, cell ID
				{
					if($cluster{$cid}{$approach[$j]} eq $que)
					{
						$classnum{$cluster{$cid}{$approach[$i]}}++; 
					}
				}
				my $eachmax=0;
				foreach my $ref(keys %classnum)
				{
					if($classnum{$ref}>$eachmax)
					{
						$eachmax=$classnum{$ref};
					}
				}
				$maxsum+=$eachmax;
			}
			my $purity=sprintf("%.4f",$maxsum/$cellnum);
			print OUT "$approach[$i]\t$approach[$j]\t$purity\n";
		}
	}
}
close OUT;

__END__
